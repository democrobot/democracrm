# Generated by Django 5.1.1 on 2024-12-08 02:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '__first__'),
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PoliticalParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('abbreviation', models.CharField(blank=True)),
                ('initial', models.CharField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Political Parties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GoverningBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('level', models.CharField(choices=[('federal', 'Federal'), ('state', 'State'), ('county', 'County'), ('municipal', 'Municipal')])),
                ('notes', models.TextField(blank=True)),
                ('boundary', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='places.boundary')),
            ],
            options={
                'verbose_name_plural': 'Governing Bodies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='lobbying.committee', verbose_name='parent')),
                ('governing_body', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.governingbody')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Legislation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('number', models.CharField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('proposed', 'Proposed'), ('in-committee', 'In Committee'), ('in-debate', 'In Debate'), ('voting-on', 'Voting On'), ('adopted', 'Adopted'), ('rejected', 'Rejected')])),
                ('notes', models.TextField(blank=True)),
                ('committee', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.committee')),
                ('governing_body', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.governingbody')),
            ],
            options={
                'verbose_name_plural': 'Legislation',
            },
        ),
        migrations.CreateModel(
            name='LegislationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('legislation', models.ManyToManyField(blank=True, to='lobbying.legislation')),
            ],
            options={
                'verbose_name_plural': 'Legislation Group',
            },
        ),
        migrations.CreateModel(
            name='LegislativeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField(blank=True)),
                ('end_date', models.DateField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('governing_body', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.governingbody')),
            ],
            options={
                'verbose_name_plural': 'Legislative Sessions',
            },
        ),
        migrations.AddField(
            model_name='legislation',
            name='legislative_session',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.legislativesession'),
        ),
        migrations.CreateModel(
            name='PublicOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('office_type', models.CharField(choices=[('legislative', 'Legislative'), ('executive', 'Executive'), ('judicial', 'Judicial'), ('other', 'Other')], default='legislative')),
                ('chamber_type', models.CharField(choices=[('unicameral', 'Unicameral'), ('bicameral', 'Bicameral'), ('tricameral', 'Tricameral'), ('tetracameral', 'Tetracameral')], default='unicameral')),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('total_seats', models.IntegerField(default=1)),
                ('seats_per_subdivision', models.IntegerField(default=1)),
                ('notes', models.TextField(blank=True)),
                ('governing_body', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.governingbody')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='lobbying.publicoffice', verbose_name='parent')),
            ],
            options={
                'verbose_name_plural': 'Public Offices',
            },
        ),
        migrations.CreateModel(
            name='PoliticalSubdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('district', models.IntegerField(blank=True, null=True)),
                ('seats', models.IntegerField(default=1)),
                ('notes', models.TextField(blank=True)),
                ('boundary', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='places.boundary')),
                ('public_office', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicoffice')),
            ],
            options={
                'verbose_name_plural': 'Political Subdivisions',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='committee',
            name='public_office',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.publicoffice'),
        ),
        migrations.CreateModel(
            name='PublicOfficial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('prefix_name', models.CharField(blank=True)),
                ('first_name', models.CharField()),
                ('middle_name', models.CharField(blank=True)),
                ('last_name', models.CharField()),
                ('suffix_name', models.CharField(blank=True)),
                ('role', models.CharField(choices=[('legislative', 'Legislative'), ('executive', 'Executive'), ('judicial', 'Judicial'), ('administrative', 'Administrative'), ('clerical', 'Clerical')], default='legislative')),
                ('title', models.CharField(default='Legislator')),
                ('description', models.TextField(blank=True)),
                ('is_leadership', models.BooleanField(default=False)),
                ('leadership_title', models.CharField(blank=True)),
                ('is_elected', models.BooleanField(default=True)),
                ('is_seeking_reelection', models.BooleanField(default=True)),
                ('service_start', models.DateField(blank=True, null=True)),
                ('service_end', models.DateField(blank=True, null=True)),
                ('official_profile_url', models.URLField(blank=True)),
                ('official_profile_thumbnail_url', models.URLField(blank=True)),
                ('official_profile_photo_url', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('contacts', models.ManyToManyField(blank=True, to='people.contact')),
                ('political_party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.politicalparty')),
                ('political_subdivision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.politicalsubdivision')),
                ('public_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='lobbying.publicoffice')),
            ],
            options={
                'verbose_name_plural': 'Public Officials',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='InterpersonalTie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('tie_strength', models.CharField(choices=[('strong', 'Strong'), ('weak', 'Weak'), ('invisible', 'Invisible'), ('unknown', 'Unknown')], default='unknown')),
                ('tie_affinity', models.CharField(choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative')], default='neutral')),
                ('notes', models.TextField(blank=True)),
                ('public_official1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ties_from', to='lobbying.publicofficial')),
                ('public_official2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ties_to', to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Interpersonal Ties',
            },
        ),
        migrations.CreateModel(
            name='CommitteeRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('is_leadership', models.BooleanField(default=False)),
                ('leadership_title', models.CharField(blank=True)),
                ('type', models.CharField(choices=[('chair', 'Chair'), ('vice-chair', 'Vice-Chair'), ('ex-officio', 'Ex-Officio'), ('member', 'Member')], default='member')),
                ('service_start', models.DateField(blank=True, null=True)),
                ('service_end', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('public_official', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Committee Roles',
            },
        ),
        migrations.CreateModel(
            name='PublicOfficialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='lobbying.publicofficialgroup', verbose_name='parent')),
                ('public_officials', models.ManyToManyField(blank=True, to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Public Official Groups',
            },
        ),
        migrations.CreateModel(
            name='PublicOfficialPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField()),
                ('description', models.TextField(blank=True)),
                ('is_elected', models.BooleanField(default=True)),
                ('is_leadership', models.BooleanField(default=False)),
                ('leadership_title', models.CharField(blank=True)),
                ('type', models.CharField(choices=[('legislative', 'Legislative'), ('executive', 'Executive'), ('judicial', 'Judicial'), ('administrative', 'Administrative'), ('clerical', 'Clerical')], default='legislative')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('official_profile_url', models.URLField(blank=True)),
                ('official_profile_thumbnail_url', models.URLField(blank=True)),
                ('official_profile_photo_url', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('political_subdivision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.politicalsubdivision')),
                ('public_office', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicoffice')),
                ('public_official', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Public Official Positions',
            },
        ),
        migrations.CreateModel(
            name='SupportLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('campaign_support', models.CharField(choices=[('Strongly Supports', 'Strongly Supports'), ('Supports', 'Supports'), ('Undecided On', 'Undecided On'), ('Opposes', 'Opposes'), ('Strongly Opposes', 'Strongly Opposes')])),
                ('legislation_support', models.CharField(choices=[('Strongly Supports', 'Strongly Supports'), ('Supports', 'Supports'), ('Undecided On', 'Undecided On'), ('Opposes', 'Opposes'), ('Strongly Opposes', 'Strongly Opposes')])),
                ('notes', models.TextField(blank=True)),
                ('legislation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lobbying.legislationgroup')),
                ('public_official', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lobbying.publicofficial')),
            ],
            options={
                'verbose_name_plural': 'Support Levels',
            },
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(primary_key=True, serialize=False)),
                ('political_party_code', models.CharField()),
                ('prefix_name', models.CharField(blank=True, verbose_name='Prefix Name')),
                ('first_name', models.CharField(blank=True, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, verbose_name='Last Name')),
                ('suffix_name', models.CharField(blank=True, verbose_name='Suffix Name')),
                ('sex', models.CharField(blank=True, verbose_name='Sex')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('initial_registration_date', models.DateField(blank=True, null=True, verbose_name='Initial Registration')),
                ('last_registration_date', models.DateField(blank=True, null=True, verbose_name='Current Registration')),
                ('last_election_date', models.DateField(blank=True, null=True)),
                ('last_voting_date', models.DateField(blank=True, null=True)),
                ('voter_precinct', models.CharField(blank=True)),
                ('voter_polling_place', models.CharField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active')),
                ('physical_address_street_number', models.CharField(blank=True, verbose_name='Address Number')),
                ('physical_address_street_number_suffix', models.CharField(blank=True)),
                ('physical_address_street_name', models.CharField(blank=True, verbose_name='Address Street Name')),
                ('physical_address_unit', models.CharField(blank=True, verbose_name='Address Unit')),
                ('physical_address_supplemental', models.CharField(blank=True, verbose_name='Address Supplement')),
                ('physical_address_city', models.CharField(blank=True, verbose_name='City')),
                ('municipality_code', models.CharField()),
                ('physical_address_zip_code', models.CharField(blank=True, verbose_name='ZIP Code')),
                ('mailing_address', models.CharField(blank=True, verbose_name='Mailing Address')),
                ('mailing_address_supplemental', models.CharField(blank=True, verbose_name='Mailing Address Supplement')),
                ('mailing_address_city', models.CharField(blank=True, verbose_name='Mailing City')),
                ('mailing_address_state', models.CharField(blank=True, verbose_name='Mailing State')),
                ('mailing_address_zip_code', models.CharField(blank=True, verbose_name='Mailing ZIP Code')),
                ('phone_number', models.CharField(blank=True, verbose_name='Phone Number')),
                ('email_address', models.CharField(blank=True, verbose_name='Email')),
                ('data_export_date', models.DateField()),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='county_voters', to='places.boundary')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='municipal_voters', to='places.boundary')),
                ('political_party', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='lobbying.politicalparty')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='state_voters', to='places.boundary')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
